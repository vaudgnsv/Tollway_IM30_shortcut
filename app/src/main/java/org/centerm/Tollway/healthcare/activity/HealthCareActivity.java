package org.centerm.Tollway.healthcare.activity;

import android.app.Dialog;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;

import com.centerm.smartpos.util.HexUtil;

import org.centerm.Tollway.R;
import org.centerm.Tollway.activity.posinterface.PosInterfaceActivity;
import org.centerm.Tollway.activity.settlement.MenuSettlementActivity;
import org.centerm.Tollway.core.BlockCalculateUtil;
import org.centerm.Tollway.core.CustomSocketListener;
import org.centerm.Tollway.healthcare.activity.healthcarevoid.VoidHealthCareActivity;
import org.centerm.Tollway.healthcare.baseavtivity.BaseHealthCardActivity;
import org.centerm.Tollway.helper.CardPrefix;
import org.centerm.Tollway.utility.Preference;
import org.centerm.Tollway.utility.Utility;

import java.nio.charset.StandardCharsets;
import java.util.ArrayList;

import io.realm.Realm;


public class HealthCareActivity extends BaseHealthCardActivity {
    private final String TAG = "utility:: "+this.getClass().getName();

    private Realm realm = null;

    public static final String MSG_CARD = "MSG_CARD";
    public static final String IC_CARD = "IC_CARD";

    public static final String KEY_CARD = "key_card";
    public static final String KEY_TYPE_CARD = MenuSettlementActivity.class.getName() + "key_type_card";

    private ArrayList<String> HealthCarenameMenuList = null;
    private LinearLayout linearLayoutToolbarBottom = null;
    private FrameLayout HealthSaleFrameLayoutBottom = null;
    private FrameLayout HealthSettlementFrameLayoutBottom = null;
    private FrameLayout HealthVoidFrameLayoutBottom = null;
    private FrameLayout HealthOfflineFrameLayoutBottom = null;
    private FrameLayout HealthIDcardFrameLayoutBottom = null;
    private FrameLayout HealthTestHostFrameLayoutBottom = null;
    private FrameLayout HealthSettingFrameLayoutBottom = null;

    private Dialog dialogHost;
    //    private CardManager cardManager = null;
    private ImageView closeImage;
    private CustomSocketListener customSocketListener;
    private String[] mBlockDataSend;
    private String TERMINAL_ID;
    private String MERCHANT_NUMBER;
    private String TPDU;

    private String[] responed;

    PosInterfaceActivity posinterface = new PosInterfaceActivity();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_health_care);
        System.out.printf("utility:: HealthCareinitWidget 0001 \n");
        HealthCareinitWidget();
        initBtnExit();
    }

    public void HealthCareinitWidget() {
//        recyclerViewMenuList = findViewById( R.id.recyclerViewMenuList );
        System.out.printf("utility:: HealthCareinitWidget 0002 \n");
        linearLayoutToolbarBottom = findViewById( R.id.linearLayoutToolbarBottom);
        System.out.printf("utility:: HealthCareinitWidget 0003 \n");
        HealthSaleFrameLayoutBottom = findViewById(R.id.saleHealthCareFrameLayout);
        HealthSettlementFrameLayoutBottom = findViewById(R.id.settlementHealthCareFrameLayout);
        HealthVoidFrameLayoutBottom = findViewById(R.id.voidHealthCareFrameLayout);
        HealthOfflineFrameLayoutBottom = findViewById(R.id.offlineHealthCareFrameLayout);
        HealthIDcardFrameLayoutBottom = findViewById(R.id.idCardHealthCareFrameLayout);
        HealthTestHostFrameLayoutBottom = findViewById(R.id.testHostHealthCareFrameLayout);
        HealthSettingFrameLayoutBottom = findViewById(R.id.settingHealthCareFrameLayout);

        HealthSaleFrameLayoutBottom.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                System.out.printf("utility:: HealthCareinitWidget Sale Bottom \n");
                Intent intent = new Intent(HealthCareActivity.this,MedicalTreatmentActivity.class);
                startActivity(intent);
            }

            ;
        });
        HealthIDcardFrameLayoutBottom.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                System.out.printf("utility:: HealthIDcardFrameLayoutBottom Bottom \n");
                Intent intent = new Intent(HealthCareActivity.this, IDActivity.class);
                startActivity(intent);
                overridePendingTransition(0, 0);
            }
        });
        HealthTestHostFrameLayoutBottom.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                System.out.printf("utility:: HealthCareinitWidget Test Bottom \n");
                setDataTestHostHealthCare();
            }

            ;
        });
        HealthVoidFrameLayoutBottom.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(HealthCareActivity.this, VoidHealthCareActivity.class);
                startActivity(intent);
                overridePendingTransition(0,0);
            }
        });
        HealthSettingFrameLayoutBottom.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                System.out.printf("utility:: HealthSettingFrameLayoutBottom Bottom \n");

//                TestIso8583MessageCheckHC("600444800002007020058020C010061600031011000153140050000000000400000000150022044405370003101100015314D221022004600000100060343031313030303030303030303030343031313030303087F1594650284713000630303030313202383030303030333430303030303030303130303038383031353030303030313932303030303030303048434731333831342020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202042202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020204D312020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020203230313830363134313432333133202020202020202020202020202020202020202020202020");
//                TestIso8583MessageCheckHC("606444800008002000010000C00083920000044434303131303030373030303031303034303131303030300034303221212121333130313033323430312121212123236D317A4432344E544132413D00803030303030313036303030303030303130303038363031303838383838383838353535353535353535353535353535363434343434343434343434343434343530303030303030303030303030303030492E928C90838E79");
//                TestIso8583MessageCheckHC("600444800008002000010000C0008390000004443430313130303037303030303130303430313130303030003430322121212133313031303332343031212121212323647069475053755A4159773D00483030303030303734303030303030303130303038363031333030303231373234303030303030303030303030303030301F57A3586B78E49A");


// SALE
//                TestIso8583MessageCheck
// VOID
//                TestIso8583MessageCheck
// SETTLEMENT
//                TestIso8583MessageCheckHC("600444800005002000010000C0009F920000044434303131303030373030303030303034303131303030300034303221212121333130313033323430312121212123234657556F5A3944387770383D0006303030303032009530303030303132313030303030303031303030383630313230303030303030323030303032303030303130303030303030313233303030303130303030303030313233303030303030303030303030303030303030303030303030303030300006303030303039009030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303068E1640E880503C6");
// SALE 12
//                TestIso8583MessageCheck
// SALE 13
//                TestIso8583MessageCheck

// CLEAR SALE
//                TestIso8583MessageCheckHC("600444800002007020058020C010061600035001003413310050000000000012690000200022044405370003500100341331D221022004600000100060343031313030303730303030303030343031313030303087F1594650284713000630303030323302383030303030333430303030303030303130303038383031353030303030303034303030303030303048434731333831342020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202042202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020204D312020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020203230313830363231313430353131202020202020202020202020202020202020202020202020");
// CLEAR SALE 12
//                CardManager.TestIso8583MessageCheck( "600444800002007020058020C010061600019876543210100050000000000014580000220022044405370001987654321010D221022004600000100060343031313030303730303030383030343031313030303087F1594650284713000630303030323502883030303030333930303030383030303130303038383031353030303030303034303030303030303048434731333831342020333530303130303334313333312020202020202020202020202020202020202020202020202020202020202020202020202042202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020204D3220202020202020202020202020202020202020202020202020202820202020202020202020202020202020202020202032303138303632313134303730362020202020202020202020202020202020202020202020204530413143334435433241374338443141314234443445433233453041344333443745384344413742394431423942354432" );

// CLEAR VOID
//                TestIso8583MessageCheck
//                TestIso8583MessageCheck
// CLEAR VOID
//                TestIso8583MessageCheckHC("600444800002007020058008C0000616900098765432101002500000000000258900001900220444053030303030303030303030303430313130303037303030303030303430313130303030000630303030313902943030303030333430303030303030303130303038383033353030303030303034303030303030313648434731333831342020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202042202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020204D3320202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202032303138303632313130353530312020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020");

// TLE SALE 12
//                TestIso8583MessageCheck

// CLEAR SALE 13
//                TestIso8583MessageCheckHC("600444800002007020058020C010061690009876543210120050000000000012580000090022044485379000987654321012D221022004600000100060343031313030303730303030303030343031313030303087F1594650284713000630303030303902383030303030333430303030303030303130303038383031353030303030303037303030303030303048434731333831342020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202042202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020204D332020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020203230313830363232313431393330202020202020202020202020202020202020202020202020");

//                TestIso8583MessageCheckHC("02007020058008C0000616000160010056167802500000000000120500000300220444053030303030303030303030303430313130303033303030303130303430313130303030000630303030303202383030303030333430303030303030303130303038383031353030303030313932303030303030303048434731333831342020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202042202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020204d312020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020203230313830363232313832393531202020202020202020202020202020202020202020202020");
//                inTescoReceiveAnalyse();
//                posinterface.PosInterfaceSelect();




            };
        });
    }

    public void setDataTestHostHealthCare() {
        System.out.printf("utility:: setDataTestHostHealthCare 001 \n");
        String terminalVersion = "00000001";
        String messageVersion = Preference.getInstance(HealthCareActivity.this).getValueString(Preference.KEY_MESSAGE_GHC_VERSION);
//        String messageVersion = "0008";
        String transactionCode = "4017";
        String messageLen = "00000058";
        String terminalCERT = "              "; // Paul_20180522
        String checkSUM = "        ";           // Paul_20180522
        TERMINAL_ID = CardPrefix.getTerminalId(HealthCareActivity.this, "GHC");
        MERCHANT_NUMBER = CardPrefix.getMerchantId(HealthCareActivity.this, "GHC");
        mBlockDataSend = new String[64];
        mBlockDataSend[3 - 1] = "990000";
//        mBlockDataSend[11 - 1] = BlockCalculateUtil.getSerialCode(Integer.parseInt(Preference.getInstance(HealthCareActivity.this).getValueString(Preference.KEY_TRACE_NO_GHC)));
        mBlockDataSend[24 - 1] = Preference.getInstance(HealthCareActivity.this).getValueString(Preference.KEY_NII_GHC);
        mBlockDataSend[41 - 1] = BlockCalculateUtil.getHexString(TERMINAL_ID);
        mBlockDataSend[42 - 1] = BlockCalculateUtil.getHexString(MERCHANT_NUMBER);
        mBlockDataSend[63 - 1] = getLength62(String.valueOf((messageLen + terminalVersion + messageVersion + transactionCode + checkSUM).length())) + BlockCalculateUtil.getHexString(messageLen + terminalVersion + messageVersion + transactionCode + checkSUM);

        TPDU = CardPrefix.getTPDU(HealthCareActivity.this, "GHC");
        packageAndSend(TPDU, "0800", mBlockDataSend);
    }


    int inTescoReceiveAnalyse() {
        int inSize = 0;
        String szRecBuf = null;
        byte CheckSum = 0;
// Receive RS232 Data
        byte[] RecBuf = new byte[1024 + 1];
        int i;
        int InLength = 0;
        byte[] TempBuf = new byte[1024 + 1];
        String TempString;
        int PosLen;

// LRC 0x10
        szRecBuf = "02003530303030303030303030313031313030301C343000123030303030303031303030301C0311";

//        szRecBuf = "02003530303030303030303030313032303030301C343000123030303030303035303030301C0316";
//        szRecBuf = "02005330303030303030303030313031323030301c343000123030303030303032303030301c37310013313233343536373839303132331c0399";

//        szRecBuf = "02015930303030303030303030313131314E44301C3032004054584E2043414E43454C2020202020202020202020202020202020202020202020202020202020201C443000692020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020201C303300063138303631341C303400063133323633381C0366";
//        szRecBuf = "02015930303030303030303030313131314E44301C3032004054584E2043414E43454C2020202020202020202020202020202020202020202020202020202020201C443000692020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020201C303300063138303631341C303400063133333532331C036E";
//        szRecBuf = "02014530303030303030303030313131343434301C303100093030302020202020201C303200214E6F20496E766573746D656E74204163636F756E741C363500062020202020201C3136000834303131303030301C443100153030303030303034303131303030301C303300063138303631341C303400063133333733371C33300016303030333130787878787878353331341C0375";
        inSize = szRecBuf.length();
        CheckSum = 0;
        RecBuf = HexUtil.hexStringToByte(szRecBuf);
        System.out.printf("utility:: ");
        inSize = inSize / 2;
        for (i = 0; i < inSize; i++) {
            System.out.printf("[%02X]", RecBuf[i]);
        }
        System.out.printf("\n");
//        if (!szRecBuf.substring(0, 2).equalsIgnoreCase("02"))
        if (RecBuf[0] != (byte) 0x02) {
            System.out.printf("utility:: inTescoReceiveAnalyse 001 STX Error \n");
            return 1;
        }
        if (inSize < 5) {
            System.out.printf("utility:: inTescoReceiveAnalyse 002 total Length Error \n");
            return 1;
        }
        InLength = (((RecBuf[1] & (byte) 0xF0) >> 4) * 1000) + ((RecBuf[1] & (byte) 0x0F) * 100) + (((RecBuf[2] & (byte) 0xF0) >> 4) * 10) + ((RecBuf[2] & (byte) 0x0F) * 1);
        System.out.printf("utility:: inTescoReceiveAnalyse 003 InLength = %d \n", InLength);
        if (InLength > inSize) {
            System.out.printf("utility:: inTescoReceiveAnalyse 004 Length Error \n");
            return 1;
        }
        CheckSum = (byte) 0x00;
//        CheckSum = (byte)(CheckSum ^ RecBuf[0]);      // STX
        CheckSum = (byte) (CheckSum ^ RecBuf[1]);
        CheckSum = (byte) (CheckSum ^ RecBuf[2]);
        for (i = 0; i < InLength; i++) {
            CheckSum = (byte) (CheckSum ^ RecBuf[3 + i]);
        }
        System.out.printf("utility:: ETX [%02X]\n", RecBuf[3 + i]);
        CheckSum = (byte) (CheckSum ^ RecBuf[3 + i]);                  // ETX
        System.out.printf("utility:: LRC [%02X]\n", RecBuf[3 + i + 1]);
        System.out.printf("utility:: CheckSum [%02X]\n", CheckSum);

        PosLen = 3;
        System.arraycopy(RecBuf, PosLen, TempBuf, 0, 10);
        String Reserve = new String(TempBuf, 0, 10, StandardCharsets.UTF_8);
        PosLen += 10;
        System.out.printf("utility:: Reserve = %s \n", Reserve);
        byte FormatVersion = RecBuf[PosLen];
        PosLen++;
        System.out.printf("utility:: FormatVersion = %c \n", FormatVersion);
        byte ReqResIndicator = RecBuf[PosLen];
        PosLen++;
        System.out.printf("utility:: ReqResIndicator = %c \n", ReqResIndicator);
        System.arraycopy(RecBuf, PosLen, TempBuf, 0, 2);
        String TransactionCode = new String(TempBuf, 0, 2, StandardCharsets.UTF_8);
        PosLen += 2;
        System.out.printf("utility:: TransactionCode = %s \n", TransactionCode);

        return 0;
    }

    @Override
    protected void connectTimeOut() {
        Utility.customDialogAlert(this, "ไม่สามารถเชื่อมต่อได้", new Utility.OnClickCloseImage() {
            @Override
            public void onClickImage(Dialog dialog) {
                dialog.dismiss();
            }
        });
    }

    @Override
    protected void transactionTimeOut() {
        Utility.customDialogAlert(this, "ไม่สามารถเชื่อมต่อได้", new Utility.OnClickCloseImage() {
            @Override
            public void onClickImage(Dialog dialog) {
                dialog.dismiss();
            }
        });
    }

    @Override
    protected void received(String[] data) {
        this.responed = data;

        System.out.printf("utility:: %s received \n",TAG);
        Utility.customDialogAlertSuccess(this, null, new Utility.OnClickCloseImage() {
            @Override
            public void onClickImage(Dialog dialog) {
                dialog.dismiss();
            }
        });


    }

    @Override
    protected void error(String error) {
        Utility.customDialogAlert(this, "ไม่สามารถเชื่อมต่อได้ " + error, new Utility.OnClickCloseImage() {
            @Override
            public void onClickImage(Dialog dialog) {
                dialog.dismiss();
            }
        });
    }

    @Override
    protected void other() {
        Utility.customDialogAlert(this, "ไม่สามารถเชื่อมต่อได้ ", new Utility.OnClickCloseImage() {
            @Override
            public void onClickImage(Dialog dialog) {
                dialog.dismiss();
            }
        });
    }

    @Override
    protected void onResume() {
        super.onResume();
    }

    @Override
    protected void onPause() {
        super.onPause();
    }
}

